# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  python: circleci/python@2.0.3
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  run-tests:
    executor:
      name: python/default
      # use Python 3.12
      tag: "3.12"

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Install ffmpeg"
          command: |
            sudo apt-get update
            sudo apt-get install -y ffmpeg
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum("poetry.lock") }}
      - run:
          name: "Install dependencies"
          command: |
            poetry install --extras silero --with dev
      - run:
          name: "Run tests"
          command: |
            poetry run pytest
      - save_cache:
          paths:
            - ~/.cache/pypoetry
            - ~/.cache/pip
          key: v1-dependencies-{{ checksum("poetry.lock") }}
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  run-tests-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - run-tests
